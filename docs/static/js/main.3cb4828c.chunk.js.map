{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGufs","key","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAgBvC,OACI,0BACIC,SAVa,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAQd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCkBLO,EAfK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC9B,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KC8BDO,EA/BC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHN,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAACC,GACpBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,IAEIC,EDR2BK,CAAa1B,GAAvCoB,EAJsB,EAItBA,QAAeP,EAJO,EAIbN,KAEjB,OACI,oCACI,4BAAKP,GAEJoB,GAAW,uBAAGJ,UAAU,oCAAb,cACZ,yBAAKA,UAAU,aAEPH,EAAOJ,KAAI,SAACC,GACR,OACI,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEerBkB,EAjCM,SAAAC,GAAU,IAAD,EAEU3C,mBAAS,CAAC,cAFpB,mBAEnB4C,EAFmB,KAEP7C,EAFO,KAM1B,OACI,oCACI,4CACA,kBAAC,EAAD,CACIA,cAAeA,IAEnB,6BACA,4BAEQ6C,EAAWrB,KAAI,SAAAT,GACX,OACI,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,U,MCnB1C+B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.3cb4828c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst CategoryAdd = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories((cats) => [inputValue, ...cats]);\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nCategoryAdd.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CategoryAdd","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=sHCiaZWxA9voqW3BewOq6CafRSI58GNZ`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useFetchGufs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n// import { getGifs } from '../helpers/getGifs'\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n\r\n    const { loading, data: images } = useFetchGufs(category)\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) => {\r\n                        return (\r\n                            <GifGridItem\r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGufs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then((imgs) => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    return state //{data: [], loading: true}\r\n}","import React, { useState } from 'react';\r\nimport CategoryAdd from './components/CategoryAdd.js'\r\nimport GifGrid from './components/GifGrid.js';\r\n// import PropTypes from 'prop-types'\r\n\r\nconst GifExpertApp = props => {\r\n\r\n    const [categories, setCategories] = useState(['One punch'])\r\n\r\n    // const categories = ['One push', 'Samurai x', 'Dragon ball']\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <CategoryAdd\r\n                setCategories={setCategories}\r\n            />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(category => {\r\n                        return (\r\n                            <GifGrid \r\n                                key={category}\r\n                                category={category} \r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n// GifExpertApp.propTypes = {\r\n\r\n// }\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}